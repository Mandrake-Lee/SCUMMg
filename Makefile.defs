#
#  ScummC Makefile.defs
#  Copyright (C) 2005-2006  Alban Bedel
# 
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#

##
## This makefile define all the programs that can be built.
## 

VERSION = 0.2.1

## We start by defining the different groups. By default only the
## first group is built. Group names MUST be in capital.
##
GROUPS=                         \
	PROGS                   \
	UTILS                   \

## We make 2 groups, one for the really usefull stuff
## and one with all the little utilities.
PROGS=                          \
	scc                     \
	sld                     \
	boxedit                 \
	cost                    \
	char                    \
	midi                    \
	soun                    \
	costview                \
	scvm                    \

UTILS=                          \
	zpnn2bmp                \
	rd                      \
	imgsplit                \
	imgremap                \
	raw2voc                 \
	palcat                  \
	scummvm					\
	
TESTS=                          \
	road                    \
	road7                   \
	openquest               \

##
## Each program must have a x_SRCS defined with all the source it
## need. If the program requiere some libs they must be listed in
## x_LIBS. If the program can optionaly use some lib put them
## in x_OPT_LIBS
##
## All the source needing special cflags must be put the
## corresponding lib_SRCS. Be careful a source can't be
## listed in several lib_SRCS at once. For more complexe
## lib dependency one can use some "virtual" lib:
##
## myprog_SRCS = long.c list.c of.c sources.c
## myprog_LIBS = LIBMYPROG
##
## HAVE_LIBMYPROG = $(HAVE_GTK)
## 
## LIBMYPROG_CFLAGS= $(GTK_CFLAGS) $(LIBOPT_CFLAGS)
## LIBMYPROG_LDFLAGS = $(GTK_LDFLAGS) $(LIBOPT_LDFLAGS)
##
##
## LIBMYPROG_SRCS = $(myprog_SRCS)
##
## LIBS = LIBMYPROG ... GTK LIBOPT ....
##

## If a program have many sources and make bork out with
## 'virtual memory exhausted' look at Makefile.target.

#Determine if mingw is in use

ifneq (,$(findstring mingw,$(TARGET)))
MINGW = YES
$(info MINGW found = $(MINGW))
else
undefine MINGW
$(info MINGW $(TARGET))
endif

scc_SRCS=                       \
	scc_parse_bison.c       \
	scc_parse.c				\
	scc_util.c              \
	scc_ns.c                \
	scc_target.c            \
	scc_roobj.c             \
	scc_img.c               \
	scc_code.c              \
	code.c                  \
	write.c                 \
	scc_lexer.c             \
	scc_fd.c                \
	scc_param.c             \
	scc_func.c				\
	tinycpp/preproc.c		\
	tinycpp/tokenizer.c		\
	scc_main.c		        \

ifdef MINGW
scc_SRCS += fmemopen_windows/libfmemopen.c	\
			fmemopen_windows/realpath.c		\

endif


sld_SRCS=                       \
	scc_ld.c                \
	scc_ns.c                \
	scc_target.c            \
	scc_code.c              \
	scc_fd.c                \
	scc_param.c             \
	scc_util.c              \
	scc_func.c				\

boxedit_SRCS=                   \
	read.c                  \
	write.c                 \
	scc_fd.c                \
	scc_cost.c              \
	scc_img.c               \
	scc_param.c             \
	boxedit.c               \
	scc_util.c              \
	scc_box.c               \

boxedit_LIBS=                   \
	GTK                     \

cost_SRCS=                      \
	cost_parse_bison.c        \
	scc_fd.c                \
	scc_param.c             \
	scc_img.c               \
	scc_util.c              \
	cost_lexer.c            \
	cost_globals.c			\
	cost_parse.c			\
	cost_main.c				\

char_SRCS=                      \
	char.c                  \
	scc_fd.c                \
	scc_param.c             \
	scc_img.c               \
	scc_util.c              \
	scc_char.c              \

char_OPT_LIBS=                  \
	FT                      \

midi_SRCS=                      \
	midi.c                  \
	scc_smf.c               \
	scc_fd.c                \
	scc_param.c             \
	scc_util.c              \

soun_SRCS=                      \
	soun.c                  \
	scc_fd.c                \
	scc_param.c             \
	scc_util.c              \

costview_SRCS=                  \
	code.c                  \
	decode.c                \
	read.c                  \
	write.c                 \
	scc_util.c              \
	scc_fd.c                \
	scc_cost.c              \
	costview.c              \
	scc_img.c               \
	scc_param.c             \

costview_LIBS=                  \
	GTK                     \

scvm_SRCS=                      \
	scvm.c                  \
	scvm_dbg.c              \
	scvm_res.c              \
	scvm_thread.c           \
	scvm_op.c               \
	scvm_view.c             \
	scvm_actor.c            \
	scvm_object.c           \
	scvm_verb.c             \
	scvm_string.c           \
	scc_fd.c                \
	scc_util.c              \
	scc_param.c             \
	scc_cost.c              \
	scc_char.c              \
	scc_box.c               \
	decode.c                \

scvm_LIBS=                      \
	SDL                     \

scvm_OPT_LIBS=                  \
	READLINE                \

## Utils

rd_SRCS=                        \
	code.c                  \
	decode.c                \
	read.c                  \
	write.c                 \
	scc_util.c              \
	scc_fd.c                \
	scc_cost.c              \
	rd.c                    \

zpnn2bmp_SRCS=                  \
	zpnn2bmp.c              \
	scc_fd.c                \
	scc_param.c             \
	decode.c                \
	scc_img.c               \
	scc_util.c              \

imgsplit_SRCS=                  \
	imgsplit.c              \
	scc_img.c               \
	scc_fd.c                \
	scc_param.c             \
	scc_util.c              \

imgremap_SRCS=                  \
	imgremap.c              \
	scc_img.c               \
	scc_fd.c                \
	scc_param.c             \
	scc_util.c              \

raw2voc_SRCS=                   \
	raw2voc.c               \
	scc_fd.c                \
	scc_param.c             \
	scc_util.c              \

palcat_SRCS=                    \
	palcat.c                \
	scc_img.c               \
	scc_fd.c                \
	scc_param.c             \
	scc_util.c              \

scummvm_SRCS=				\
	scummvm_script			\

scummvm_LIBS=				\
	SDL						\

##
## All the libs we have
##

LIBS =                          \
	GTK                     \
	FT                      \
	SDL                     \
	READLINE                \

## Source needing gtk
GTK_SRCS =                      \
	costview.c              \
	boxedit.c               \

## Source needing freetype
FT_SRCS =                       \
	char.c                  \

SDL_SRCS =                      \
	scvm.c                  \

READLINE =                      \
	scvm_dbg.c              \


## Scripts as per need

SCUMMVM_URL := https://github.com/scummvm/scummvm/zipball/master/
TEMP_DIR := temp
SCUMMVM_ZIPBALL := scummvm-master.zip
SCUMMG_PATCH := scummvm-2.9.0.patch

scummvm_script:
	@sh $(SRCDIR)/scummvm_down_patch_compile.sh $(TEMP_DIR)	$(SCUMMVM_URL) $(SCUMMVM_ZIPBALL) $(SRCDIR) $(SCUMMG_PATCH)

